{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nlet timerId = null;\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.disabled = true;\n\nflatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        const now = new Date();\n\n        if (selectedDate <= now) {\n            iziToast.error({\n                message: \"Please choose a date in the future\",\n                position: \"topRight\",\n            });\n            startBtn.disabled = true;\n        } else {\n            userSelectedDate = selectedDate;\n            startBtn.disabled = false;\n        }\n    },\n});\n\nstartBtn.addEventListener('click', () => {\n    startBtn.disabled = true;\n    document.querySelector('#datetime-picker').disabled = true;\n\n    timerId = setInterval(() => {\n        const now = new Date();\n        const diff = userSelectedDate - now;\n\n        if (diff <= 0) {\n            clearInterval(timerId);\n            updateTimerUI(0, 0, 0, 0);\n            document.querySelector('#datetime-picker').disabled = false;\n            return;\n        }\n\n        const { days, hours, minutes, seconds } = convertMs(diff);\n        updateTimerUI(days, hours, minutes, seconds);\n    }, 1000);\n});\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction updateTimerUI(days, hours, minutes, seconds) {\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}"],"names":["userSelectedDate","timerId","startBtn","flatpickr","selectedDates","selectedDate","iziToast","diff","updateTimerUI","days","hours","minutes","seconds","convertMs","ms","addLeadingZero","value"],"mappings":"+IAMA,IAAIA,EAAmB,KACnBC,EAAU,KACd,MAAMC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GAEpBC,EAAU,mBAAoB,CAC1B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAGhCC,GAFQ,IAAI,MAGZC,EAAS,MAAM,CACX,QAAS,qCACT,SAAU,UAC1B,CAAa,EACDJ,EAAS,SAAW,KAEpBF,EAAmBK,EACnBH,EAAS,SAAW,GAE3B,CACL,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACrCA,EAAS,SAAW,GACpB,SAAS,cAAc,kBAAkB,EAAE,SAAW,GAEtDD,EAAU,YAAY,IAAM,CAExB,MAAMM,EAAOP,EADD,IAAI,KAGhB,GAAIO,GAAQ,EAAG,CACX,cAAcN,CAAO,EACrBO,EAAc,EAAG,EAAG,EAAG,CAAC,EACxB,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtD,MACH,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAI,EACxDC,EAAcC,EAAMC,EAAOC,EAASC,CAAO,CAC9C,EAAE,GAAI,CACX,CAAC,EAED,SAASC,EAAUC,EAAI,CAMnB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASG,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASR,EAAcC,EAAMC,EAAOC,EAASC,EAAS,CAClD,SAAS,cAAc,aAAa,EAAE,YAAcG,EAAeN,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcM,EAAeL,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcK,EAAeJ,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,CACjF"}